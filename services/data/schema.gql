# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Client {
  id: ID!
  name: String!
  scope: String!
  clientId: String!
  clientSecret: String!
}

input ConnectionInput {
  provider: ID!
  state: String!
  code: String!
}

type ConnectionType {
  id: ID!
  user: UserType!
  remoteId: String!
  provider: ProviderType!
  scope: String!
  token: String!
}

input CreateClientInput {
  name: String!
  scope: String!
  clientId: String!
  clientSecret: String!
}

input CreateProviderInput {
  name: String!
  authUrl: CreateResourceInput!
  userUrl: CreateResourceInput!
  tokenUrl: CreateResourceInput!
}

input CreateProvisionInput {
  name: String!
  scope: String!
  provider: String!
  clientId: String!
  clientSecret: String!
}

input CreateResourceInput {
  name: String!
  method: String!
  endpoint: String!
  provider: String!
  params: String!
  headers: String!
  queryParams: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  updateUser(input: UpdateUserInput!, id: String!): UserType!
  deleteUser(id: String!): String!
  createClient(input: CreateClientInput!): Client!
  updateClient(input: UpdateClientInput!, id: String!): Client!
  deleteClient(id: String!): String!
  createSignIn(input: SignInInput!): SignIn!
  createSignUp(input: SignUpInput!): SignUp!
  createProvider(input: CreateProviderInput!): ProviderType!
  updateProvider(input: UpdateProviderInput!, id: String!): ProviderType!
  deleteProvider(id: String!): String!
  createConnection(input: ConnectionInput!): ConnectionType!
  createResource(input: CreateResourceInput!): ResourceType!
  updateResource(input: UpdateResourceInput!, id: String!): ResourceType!
  deleteResource(id: String!): String!
  createProvision(input: CreateProvisionInput!): ProvisionType!
  updateProvision(input: UpdateProvisionInput!, id: String!): ProvisionType!
  deleteProvision(id: String!): String!
}

type ProviderType {
  id: ID!
  name: String!
  authUrl: ResourceType!
  userUrl: ResourceType!
  tokenUrl: ResourceType!
}

type ProvisionType {
  id: ID!
  name: String!
  clientId: String!
  clientSecret: String!
  client: Client!
  provider: ProviderType!
}

type Query {
  users: [UserType!]!
  tokens: [Token!]!
  clients: [Client!]!
  signIns: [SignIn!]!
  signUps: [SignUp!]!
  providers: [ProviderType!]!
  connections: [ConnectionType!]!
  resources: [ResourceType!]!
  provisions: [ProvisionType!]!
}

type ResourceType {
  id: ID!
  name: String!
  method: String!
  endpoint: String!
  provider: String!
  params: String
  headers: String
  queryParams: String
}

type SignIn {
  id: ID!
  user: UserType!
  token: Token!
  connection: ConnectionType!
  username: String!
}

input SignInInput {
  username: String!
  password: String!
  connection: ConnectionInput!
}

type SignUp {
  id: ID!
  user: UserType!
  token: Token!
  connections: [ConnectionType!]
  email: String!
  username: String!
  avatarUrl: String
}

input SignUpInput {
  email: String!
  username: String!
  password: String!
  avatarUrl: String!
  connections: [ConnectionInput!]!
}

type Token {
  id: ID!
  user: UserType!
  accessToken: String!
  refreshToken: String!
  tokenValidity: DateTime!
  refreshValidity: DateTime!
}

input UpdateClientInput {
  name: String!
  scope: String!
  clientId: String!
  clientSecret: String!
}

input UpdateProviderInput {
  name: String!
  authUrl: String!
  userUrl: String!
  tokenUrl: String!
}

input UpdateProvisionInput {
  name: String!
  provider: String!
  clientId: String!
  clientSecret: String!
}

input UpdateResourceInput {
  name: String!
  method: String!
  endpoint: String!
  provider: String!
  params: String!
  headers: String!
  queryParams: String!
}

input UpdateUserInput {
  email: String!
  username: String!
  password: String!
  avatarUrl: String!
}

type UserType {
  id: ID!
  email: String!
  username: String!
  avatarUrl: String
  connections: [ConnectionType!]!
}
